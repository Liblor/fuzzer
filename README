
Description :
-------------

- A work in progress :)
- This is a mutation based file fuzzer, using the winappdbg library for process management.

Usage :
-------

Usage: fuzzer.py [options]

Options:
  -h, --help         show this help message and exit
  -p program         Program to launch, the full command line that will be
                     executed
  -f file            File to be mutated
  -d temp_directory  Directory for temporary files to be created
  -t mutation_type   Type of mutation ("byte", "word", "dword")
  -l log             Log file
  -s save_directory  Save-directory, for files to be saved that cause crashes
  -m max_processes   Max Processes 

Example:  

./fuzzer.py -p "C:\Program Files\Blah\prog.exe" -f original_file.mp3 -d temp -t dword -l log.txt -s save -m 4


Sample run-time output, with a crash occuring towards the end of the run :
--------------------------------------------------------------------------

00% - Sat Sep 01 18:37:49 2012
10% - Sat Sep 01 18:37:56 2012
20% - Sat Sep 01 18:38:04 2012
30% - Sat Sep 01 18:38:12 2012
40% - Sat Sep 01 18:38:19 2012
50% - Sat Sep 01 18:38:27 2012
60% - Sat Sep 01 18:38:35 2012
70% - Sat Sep 01 18:38:43 2012
80% - Sat Sep 01 18:38:52 2012
90% - Sat Sep 01 18:38:59 2012

--------------------
[!] Crash! Run number 4512
---------- 4512 ----------
Running : C:\Documents and Settings\Administrator\Desktop\fuzzing\tmp\a.exe files\original-4512.txt
run number = 4512, offset = 300, value_index = 12
handler_output =
[*] Handling Event : int_divide_by_zero at a!start+0x2a5
[*] Image Base : 0x00400000
[*] Registers :
Esp   = 0x0022ff20
Esi   = 0x00000000
Eax   = 0x00000003
Ecx   = 0x00403066
Eip   = 0x00401405
Edi   = 0x77ddf4a0
Ebp   = 0x0022ff58
Edx   = 0x00000000
Ebx   = 0x7ffd4000
[*] Disassembly :
0x004013e5 : 1  44                   | inc esp
0x004013e6 : 2  2404                 | and al,0x4
0x004013e8 : 4  64304000             | xor fs:[eax+0x0],al
0x004013ec : 3  890424               | mov [esp],eax
0x004013ef : 5  e8cc080000           | call a!start+0xb60
0x004013f4 : 2  85c0                 | test eax,eax
0x004013f6 : 2  741d                 | jz a!start+0x2b5
0x004013f8 : 4  8b44242c             | mov eax,[esp+0x2c]
0x004013fc : 8  c744241c00000000     | mov dword [esp+0x1c],0x0
0x00401404 : 1  99                   | cwd
0x00401405 : 4  f77c241c             | idiv [esp+0x1c]   <----- Eip
0x00401409 : 3  83f803               | cmp eax,0x3
0x0040140c : 2  7507                 | jnz a!start+0x2b5
0x0040140e : 5  b801000000           | mov eax,0x1
0x00401413 : 2  eb12                 | jmp a!start+0x2c7
0x00401415 : 4  ff44242c             | inc [esp+0x2c]
0x00401419 : 4  8b44242c             | mov eax,[esp+0x2c]
0x0040141d : 3  3b4508               | cmp eax,[ebp+0x8]
0x00401420 : 2  7cb6                 | jl a!start+0x278
0x00401422 : 1  B8                   | db 0xb8
0x00401423 : 2  0000                 | add [eax],al
[*] Stack Dump :
0x0022ff20 : 0x003e3c1b 0x00403064 0xffffffff 0x77c34e29
0x0022ff30 : 0x77c34e42 0x004019c0 0x0022ff58 0x00000000
0x0022ff40 : 0x004019c0 0x77ddf4a0 0x00000000 0x00000003
0x0022ff50 : 0x7ffd4000 0x00000000 0x0022ffa0 0x004010db
0x0022ff60 : 0x00000004 0x003e3d00 0x003e2b20 0x00405004
0x0022ff70 : 0x0022ff94 0xffffffff 0x0022ff90 0x00000000
[*] Stack Backtrace :
- Ret Addr, Frame Pointer Label
0x0022ff58, 0x004010DB (a!0x10db)
0x0022ffa0, 0x00401178 (a!start+0x18)
0x0022ffc0, 0x7C817067 (kernel32!RegisterWaitForInputIdle+0x49)
[*] Copying file to safe directory
[*] Killing process...



--------------------
100% - Sat Sep 01 18:39:06 2012
total time = 76.7969999313




Dependencies :
--------------

- winappdbg, http://winappdbg.sourceforge.net/
- winappdbg depends on having some sort of disassembly engine
	- Grab PyDasm from http://sourceforge.net/projects/winappdbg/files/additional%20packages/PyDasm/PyDasm-1.5-precompiled.zip/download
		- Choose PyDbgEng
		- Copy pydasm.pyd from the winM-N folder, where M and N match your windows and python version
		- paste it into your C:\PythonN\Lib\site-packages directory
